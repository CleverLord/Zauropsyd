//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Logo.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILogoListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LogoBaseListener : ILogoListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.int_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt_type([NotNull] LogoParser.Int_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.int_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt_type([NotNull] LogoParser.Int_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.float_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloat_type([NotNull] LogoParser.Float_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.float_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloat_type([NotNull] LogoParser.Float_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_type([NotNull] LogoParser.String_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_type([NotNull] LogoParser.String_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] LogoParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] LogoParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperand([NotNull] LogoParser.OperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperand([NotNull] LogoParser.OperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.comparator_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparator_gen([NotNull] LogoParser.Comparator_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.comparator_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparator_gen([NotNull] LogoParser.Comparator_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.num_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum_val([NotNull] LogoParser.Num_valContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.num_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum_val([NotNull] LogoParser.Num_valContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.operation_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperation_gen([NotNull] LogoParser.Operation_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.operation_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperation_gen([NotNull] LogoParser.Operation_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.value_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_gen([NotNull] LogoParser.Value_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.value_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_gen([NotNull] LogoParser.Value_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.list_acc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_acc([NotNull] LogoParser.List_accContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.list_acc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_acc([NotNull] LogoParser.List_accContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCond([NotNull] LogoParser.CondContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.cond"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCond([NotNull] LogoParser.CondContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.list_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_type([NotNull] LogoParser.List_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.list_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_type([NotNull] LogoParser.List_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.move_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMove_keyword([NotNull] LogoParser.Move_keywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.move_keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMove_keyword([NotNull] LogoParser.Move_keywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.move_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMove_command([NotNull] LogoParser.Move_commandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.move_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMove_command([NotNull] LogoParser.Move_commandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.pen_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPen_command([NotNull] LogoParser.Pen_commandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.pen_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPen_command([NotNull] LogoParser.Pen_commandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.if_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_command([NotNull] LogoParser.If_commandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.if_command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_command([NotNull] LogoParser.If_commandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.if_faker"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_faker([NotNull] LogoParser.If_fakerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.if_faker"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_faker([NotNull] LogoParser.If_fakerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.list_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_gen([NotNull] LogoParser.List_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.list_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_gen([NotNull] LogoParser.List_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.assignment_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_gen([NotNull] LogoParser.Assignment_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.assignment_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_gen([NotNull] LogoParser.Assignment_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.output_instruction_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutput_instruction_gen([NotNull] LogoParser.Output_instruction_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.output_instruction_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutput_instruction_gen([NotNull] LogoParser.Output_instruction_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.instruction_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction_gen([NotNull] LogoParser.Instruction_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.instruction_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction_gen([NotNull] LogoParser.Instruction_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.function_instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_instr([NotNull] LogoParser.Function_instrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.function_instr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_instr([NotNull] LogoParser.Function_instrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.repeat_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeat_loop([NotNull] LogoParser.Repeat_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.repeat_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeat_loop([NotNull] LogoParser.Repeat_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.repeat_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeat_start([NotNull] LogoParser.Repeat_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.repeat_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeat_start([NotNull] LogoParser.Repeat_startContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_loop([NotNull] LogoParser.While_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_loop([NotNull] LogoParser.While_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.loop_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop_gen([NotNull] LogoParser.Loop_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.loop_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop_gen([NotNull] LogoParser.Loop_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.instructions_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstructions_gen([NotNull] LogoParser.Instructions_genContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.instructions_gen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstructions_gen([NotNull] LogoParser.Instructions_genContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogoParser.starter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStarter([NotNull] LogoParser.StarterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogoParser.starter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStarter([NotNull] LogoParser.StarterContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
